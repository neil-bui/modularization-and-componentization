{"ast":null,"code":"import _slicedToArray from \"/Users/neil/Downloads/m3-w7-d1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/neil/Downloads/m3-w7-d1/src/spheres/Scene.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { timer } from \"d3-timer\";\nimport { useOrbitCamera, useOrbitControls } from \"@react-vertex/orbit-camera\";\nimport { useCanvasSize, useRender, usePointLight } from \"@react-vertex/core\";\nimport { useVector3 } from \"@react-vertex/math-hooks\";\nimport Spheres from \"./Spheres\";\nimport LightOrb from \"./LightOrb\";\nimport { Canvas } from \"@react-vertex/core\";\nimport { useViewportSize } from \"@react-vertex/dom-hooks\";\n\nfunction Scene() {\n  var _useCanvasSize = useCanvasSize(),\n      width = _useCanvasSize.width,\n      height = _useCanvasSize.height;\n\n  var camera = useOrbitCamera(35, width / height, 1, 5000, function (c) {\n    c.setPosition([0, 0, 600]);\n  });\n  useOrbitControls(camera);\n\n  var _useState = useState([0, 0, 0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      groupRotation = _useState2[0],\n      setGroupRotation = _useState2[1];\n\n  var _useState3 = useState([0, 0, 0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lightPosition = _useState4[0],\n      setLightPosition = _useState4[1];\n\n  var lightColor = useVector3(0.2, 0.9, 0.9);\n  usePointLight(lightColor, lightPosition);\n  var renderScene = useRender();\n  useEffect(function () {\n    var timerLoop = timer(function (e) {\n      var a = e * 0.0006;\n      var y = Math.cos(a) * 150;\n      var z = Math.sin(a) * 150;\n      setLightPosition([0, y, z]);\n      setGroupRotation([0, a, 0]);\n      renderScene();\n    });\n    return function () {\n      return timerLoop.stop();\n    };\n  }, [renderScene]);\n  return /*#__PURE__*/React.createElement(\"camera\", {\n    view: camera.view,\n    projection: camera.projection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    rotation: groupRotation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spheres, {\n    layoutRadius: 100,\n    sphereCount: 50,\n    sphereRadius: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(LightOrb, {\n    color: lightColor,\n    position: lightPosition,\n    radius: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ExampleSphere() {\n  var _useViewportSize = useViewportSize(),\n      width = _useViewportSize.width,\n      height = _useViewportSize.height;\n\n  return /*#__PURE__*/React.createElement(Canvas, {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Scene, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ExampleSphere;","map":{"version":3,"sources":["/Users/neil/Downloads/m3-w7-d1/src/spheres/Scene.js"],"names":["React","useState","useEffect","timer","useOrbitCamera","useOrbitControls","useCanvasSize","useRender","usePointLight","useVector3","Spheres","LightOrb","Canvas","useViewportSize","Scene","width","height","camera","c","setPosition","groupRotation","setGroupRotation","lightPosition","setLightPosition","lightColor","renderScene","timerLoop","e","a","y","Math","cos","z","sin","stop","view","projection","ExampleSphere"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { timer } from \"d3-timer\";\nimport { useOrbitCamera, useOrbitControls } from \"@react-vertex/orbit-camera\";\nimport { useCanvasSize, useRender, usePointLight } from \"@react-vertex/core\";\nimport { useVector3 } from \"@react-vertex/math-hooks\";\nimport Spheres from \"./Spheres\";\nimport LightOrb from \"./LightOrb\";\nimport { Canvas } from \"@react-vertex/core\";\nimport { useViewportSize } from \"@react-vertex/dom-hooks\";\n\nfunction Scene() {\n  const { width, height } = useCanvasSize();\n\n  const camera = useOrbitCamera(35, width / height, 1, 5000, (c) => {\n    c.setPosition([0, 0, 600]);\n  });\n  useOrbitControls(camera);\n\n  const [groupRotation, setGroupRotation] = useState([0, 0, 0]);\n  const [lightPosition, setLightPosition] = useState([0, 0, 0]);\n  const lightColor = useVector3(0.2, 0.9, 0.9);\n\n  usePointLight(lightColor, lightPosition);\n\n  const renderScene = useRender();\n\n  useEffect(() => {\n    const timerLoop = timer((e) => {\n      const a = e * 0.0006;\n      const y = Math.cos(a) * 150;\n      const z = Math.sin(a) * 150;\n\n      setLightPosition([0, y, z]);\n      setGroupRotation([0, a, 0]);\n      renderScene();\n    });\n    return () => timerLoop.stop();\n  }, [renderScene]);\n\n  return (\n    <camera view={camera.view} projection={camera.projection}>\n      <group rotation={groupRotation}>\n        <Spheres layoutRadius={100} sphereCount={50} sphereRadius={10} />\n      </group>\n      <LightOrb color={lightColor} position={lightPosition} radius={3} />\n    </camera>\n  );\n}\n\nfunction ExampleSphere() {\n  const { width, height } = useViewportSize();\n\n  return (\n    <Canvas width={width} height={height}>\n      <Scene />\n    </Canvas>\n  );\n}\n\nexport default ExampleSphere;\n"]},"metadata":{},"sourceType":"module"}