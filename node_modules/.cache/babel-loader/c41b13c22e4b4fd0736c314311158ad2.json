{"ast":null,"code":"import _slicedToArray from \"/Users/neil/Downloads/m3-w7-d1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/neil/Downloads/m3-w7-d1/src/spheres/Spheres.js\";\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTexture2d } from \"@react-vertex/core\";\nimport { usePhongTextured } from \"@react-vertex/material-hooks\";\nimport { useSphereElements } from \"@react-vertex/geometry-hooks\";\nimport tiles from \"./abstract.jpg\";\n\nfunction Spheres(_ref) {\n  var _this = this;\n\n  var layoutRadius = _ref.layoutRadius,\n      sphereCount = _ref.sphereCount,\n      sphereRadius = _ref.sphereRadius;\n\n  var _useTexture2d = useTexture2d(tiles),\n      _useTexture2d2 = _slicedToArray(_useTexture2d, 1),\n      texture = _useTexture2d2[0];\n\n  var program = usePhongTextured(texture, 0.1);\n  var sphere = useSphereElements(sphereRadius, 20, 20);\n  var positions = useMemo(function () {\n    var result = [];\n\n    for (var i = 0; i < sphereCount; i++) {\n      var a = Math.acos(-1 + 2 * i / sphereCount);\n      var b = Math.sqrt((sphereCount - 1) * Math.PI) * a;\n      result.push([layoutRadius * Math.cos(b) * Math.sin(a), layoutRadius * Math.sin(b) * Math.sin(a), layoutRadius * Math.cos(a)]);\n    }\n\n    return result;\n  }, [sphereCount, layoutRadius]);\n  return /*#__PURE__*/React.createElement(\"material\", {\n    program: program,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, positions.map(function (position, idx) {\n    return /*#__PURE__*/React.createElement(\"geometry\", Object.assign({\n      key: idx,\n      position: position\n    }, sphere, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }));\n}\n\nSpheres.propTypes = {\n  sphereCount: PropTypes.number.isRequired,\n  sphereRadius: PropTypes.number.isRequired,\n  layoutRadius: PropTypes.number.isRequired\n};\nexport default Spheres;","map":{"version":3,"sources":["/Users/neil/Downloads/m3-w7-d1/src/spheres/Spheres.js"],"names":["React","useMemo","PropTypes","useTexture2d","usePhongTextured","useSphereElements","tiles","Spheres","layoutRadius","sphereCount","sphereRadius","texture","program","sphere","positions","result","i","a","Math","acos","b","sqrt","PI","push","cos","sin","map","position","idx","propTypes","number","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,SAASC,OAAT,OAA8D;AAAA;;AAAA,MAA3CC,YAA2C,QAA3CA,YAA2C;AAAA,MAA7BC,WAA6B,QAA7BA,WAA6B;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;;AAAA,sBAC1CP,YAAY,CAACG,KAAD,CAD8B;AAAA;AAAA,MACrDK,OADqD;;AAE5D,MAAMC,OAAO,GAAGR,gBAAgB,CAACO,OAAD,EAAU,GAAV,CAAhC;AACA,MAAME,MAAM,GAAGR,iBAAiB,CAACK,YAAD,EAAe,EAAf,EAAmB,EAAnB,CAAhC;AAEA,MAAMI,SAAS,GAAGb,OAAO,CAAC,YAAM;AAC9B,QAAMc,MAAM,GAAG,EAAf;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,WAApB,EAAiCO,CAAC,EAAlC,EAAsC;AACpC,UAAMC,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAU,CAAC,CAAD,GAAM,IAAIH,CAAL,GAAUP,WAAzB,CAAV;AACA,UAAMW,CAAC,GAAGF,IAAI,CAACG,IAAL,CAAU,CAACZ,WAAW,GAAG,CAAf,IAAoBS,IAAI,CAACI,EAAnC,IAAyCL,CAAnD;AAEAF,MAAAA,MAAM,CAACQ,IAAP,CAAY,CACVf,YAAY,GAAGU,IAAI,CAACM,GAAL,CAASJ,CAAT,CAAf,GAA6BF,IAAI,CAACO,GAAL,CAASR,CAAT,CADnB,EAEVT,YAAY,GAAGU,IAAI,CAACO,GAAL,CAASL,CAAT,CAAf,GAA6BF,IAAI,CAACO,GAAL,CAASR,CAAT,CAFnB,EAGVT,YAAY,GAAGU,IAAI,CAACM,GAAL,CAASP,CAAT,CAHL,CAAZ;AAKD;;AAED,WAAOF,MAAP;AACD,GAfwB,EAetB,CAACN,WAAD,EAAcD,YAAd,CAfsB,CAAzB;AAiBA,sBACE;AAAU,IAAA,OAAO,EAAEI,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,SAAS,CAACY,GAAV,CAAc,UAACC,QAAD,EAAWC,GAAX;AAAA,wBACb;AAAU,MAAA,GAAG,EAAEA,GAAf;AAAoB,MAAA,QAAQ,EAAED;AAA9B,OAA4Cd,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADa;AAAA,GAAd,CADH,CADF;AAOD;;AAEDN,OAAO,CAACsB,SAAR,GAAoB;AAClBpB,EAAAA,WAAW,EAAEP,SAAS,CAAC4B,MAAV,CAAiBC,UADZ;AAElBrB,EAAAA,YAAY,EAAER,SAAS,CAAC4B,MAAV,CAAiBC,UAFb;AAGlBvB,EAAAA,YAAY,EAAEN,SAAS,CAAC4B,MAAV,CAAiBC;AAHb,CAApB;AAMA,eAAexB,OAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTexture2d } from \"@react-vertex/core\";\nimport { usePhongTextured } from \"@react-vertex/material-hooks\";\nimport { useSphereElements } from \"@react-vertex/geometry-hooks\";\nimport tiles from \"./abstract.jpg\";\n\nfunction Spheres({ layoutRadius, sphereCount, sphereRadius }) {\n  const [texture] = useTexture2d(tiles);\n  const program = usePhongTextured(texture, 0.1);\n  const sphere = useSphereElements(sphereRadius, 20, 20);\n\n  const positions = useMemo(() => {\n    const result = [];\n\n    for (let i = 0; i < sphereCount; i++) {\n      const a = Math.acos(-1 + (2 * i) / sphereCount);\n      const b = Math.sqrt((sphereCount - 1) * Math.PI) * a;\n\n      result.push([\n        layoutRadius * Math.cos(b) * Math.sin(a),\n        layoutRadius * Math.sin(b) * Math.sin(a),\n        layoutRadius * Math.cos(a)\n      ]);\n    }\n\n    return result;\n  }, [sphereCount, layoutRadius]);\n\n  return (\n    <material program={program}>\n      {positions.map((position, idx) => (\n        <geometry key={idx} position={position} {...sphere} />\n      ))}\n    </material>\n  );\n}\n\nSpheres.propTypes = {\n  sphereCount: PropTypes.number.isRequired,\n  sphereRadius: PropTypes.number.isRequired,\n  layoutRadius: PropTypes.number.isRequired\n};\n\nexport default Spheres;\n"]},"metadata":{},"sourceType":"module"}