{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useProgram, useUniform1f, useUniform2fv, useUniform3fv, useWebGLContext, useUniformSampler2d, usePointLightCount, usePointLightUniforms } from '@react-vertex/core';\nimport solidVert from './solid.vert';\nimport solidFrag from './solid.frag';\nimport texturedVert from './textured.vert';\nimport texturedFrag from './textured.frag';\nvar defaultKd = [1.0, 1.0, 1.0];\nvar defaultKa = [1.0, 1.0, 1.0];\nvar defaultNa = 0;\nexport function useLambertSolid(kd, na, ka) {\n  var gl = useWebGLContext();\n\n  var _usePointLightCount = usePointLightCount(solidVert, solidFrag),\n      _usePointLightCount2 = _slicedToArray(_usePointLightCount, 2),\n      vert = _usePointLightCount2[0],\n      frag = _usePointLightCount2[1];\n\n  var program = useProgram(gl, vert, frag);\n  usePointLightUniforms(gl, program);\n  useUniform1f(gl, program, 'uNa', na || defaultNa);\n  useUniform3fv(gl, program, 'uKa', ka || defaultKa);\n  useUniform3fv(gl, program, 'uKd', kd || defaultKd);\n  return program;\n}\nvar uVScale = [1.0, 1.0];\nexport function useLambertTextured(mapKd, na, ka) {\n  var gl = useWebGLContext();\n\n  var _usePointLightCount3 = usePointLightCount(texturedVert, texturedFrag),\n      _usePointLightCount4 = _slicedToArray(_usePointLightCount3, 2),\n      vert = _usePointLightCount4[0],\n      frag = _usePointLightCount4[1];\n\n  var program = useProgram(gl, vert, frag);\n  usePointLightUniforms(gl, program);\n  useUniformSampler2d(gl, program, 'mapKd', mapKd);\n  useUniform2fv(gl, program, 'uVScale', uVScale);\n  useUniform1f(gl, program, 'uNa', na || defaultNa);\n  useUniform3fv(gl, program, 'uKa', ka || defaultKa);\n  return program;\n}","map":null,"metadata":{},"sourceType":"module"}