{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nRadialGradient.propTypes = {\n  id: PropTypes.string.isRequired,\n  from: PropTypes.string,\n  to: PropTypes.string,\n  fromOffset: PropTypes.string,\n  fromOpacity: PropTypes.number,\n  toOffset: PropTypes.string,\n  toOpacity: PropTypes.number,\n  rotate: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  transform: PropTypes.string,\n  children: PropTypes.any\n};\nexport default function RadialGradient(_ref) {\n  var children = _ref.children,\n      id = _ref.id,\n      from = _ref.from,\n      to = _ref.to,\n      _ref$fromOffset = _ref.fromOffset,\n      fromOffset = _ref$fromOffset === void 0 ? '0%' : _ref$fromOffset,\n      _ref$fromOpacity = _ref.fromOpacity,\n      fromOpacity = _ref$fromOpacity === void 0 ? 1 : _ref$fromOpacity,\n      _ref$toOffset = _ref.toOffset,\n      toOffset = _ref$toOffset === void 0 ? '100%' : _ref$toOffset,\n      _ref$toOpacity = _ref.toOpacity,\n      toOpacity = _ref$toOpacity === void 0 ? 1 : _ref$toOpacity,\n      rotate = _ref.rotate,\n      transform = _ref.transform,\n      restProps = _objectWithoutPropertiesLoose(_ref, [\"children\", \"id\", \"from\", \"to\", \"fromOffset\", \"fromOpacity\", \"toOffset\", \"toOpacity\", \"rotate\", \"transform\"]);\n\n  return React.createElement(\"defs\", null, React.createElement(\"radialGradient\", _extends({\n    id: id,\n    gradientTransform: rotate ? \"rotate(\" + rotate + \")\" : transform\n  }, restProps), !!children && children, !children && React.createElement(\"stop\", {\n    offset: fromOffset,\n    stopColor: from,\n    stopOpacity: fromOpacity\n  }), !children && React.createElement(\"stop\", {\n    offset: toOffset,\n    stopColor: to,\n    stopOpacity: toOpacity\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}