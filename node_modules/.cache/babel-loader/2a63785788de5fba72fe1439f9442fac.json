{"ast":null,"code":"import { useEffect, useMemo } from 'react';\nimport { useDataTexture } from './textures';\nimport warn from 'warning';\nvar prefix = 'react-vertex:';\nexport function useFramebuffer(gl) {\n  var memoized = useMemo(function () {\n    var buffer = gl.createFramebuffer();\n    warn(!!buffer, \"\".concat(prefix, \" Failed to create frame buffer.\"));\n    return buffer;\n  }, [gl]);\n  useEffect(function () {\n    return function () {\n      return gl.deleteFramebuffer(memoized);\n    };\n  }, [gl, memoized]);\n  return memoized;\n}\nexport function useFBO(gl, width, height, getTexOpts) {\n  var tex = useDataTexture(gl, null, width, height, getTexOpts);\n  var fbo = useFramebuffer(gl);\n  var memoized = useMemo(function () {\n    var attachment = gl.COLOR_ATTACHMENT0;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, tex, 0);\n    return {\n      tex: tex,\n      fbo: fbo,\n      attach: function attach(unit) {\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(gl.TEXTURE_2D, tex);\n        return unit;\n      }\n    };\n  }, [gl, fbo, tex]);\n  return memoized;\n}\nexport function useDoubleFBO(gl, width, height, getTexOpts) {\n  var frameBuffer1 = useFBO(gl, width, height, getTexOpts);\n  var frameBuffer2 = useFBO(gl, width, height, getTexOpts);\n  var memoized = useMemo(function () {\n    var fbo1 = frameBuffer1;\n    var fbo2 = frameBuffer2;\n    return {\n      get read() {\n        return fbo1;\n      },\n\n      set read(value) {\n        fbo1 = value;\n      },\n\n      get write() {\n        return fbo2;\n      },\n\n      set write(value) {\n        fbo2 = value;\n      },\n\n      swap: function swap() {\n        var temp = fbo1;\n        fbo1 = fbo2;\n        fbo2 = temp;\n      }\n    };\n  }, [frameBuffer1, frameBuffer2]);\n  return memoized;\n}","map":null,"metadata":{},"sourceType":"module"}